import { apiClient } from './client';
import { Permission } from '@/types';

export class PermissionsService {
    /**
     * R√©cup√®re toutes les permissions
     */
    static async getAllPermissions(): Promise<Permission[]> {
        try {
            console.log('üîç R√©cup√©ration de toutes les permissions depuis l\'API...');

            const response = await apiClient.get<Permission[]>('/roles/all/permissions');

            console.log('‚úÖ Permissions r√©cup√©r√©es avec succ√®s:', response);

            // L'API retourne directement un tableau de permissions
            return response.data || response || [];
        } catch (error: any) {
            console.error('‚ùå Erreur lors de la r√©cup√©ration des permissions:', error);
            throw new Error(`Erreur lors de la r√©cup√©ration des permissions: ${error.message || 'Erreur inconnue'}`);
        }
    }

    /**
     * Cr√©e une nouvelle permission
     */
    static async createPermission(permissionData: { name: string }): Promise<Permission> {
        try {
            console.log('üîç Cr√©ation d\'une nouvelle permission...', permissionData);

            const response = await apiClient.post<Permission>('/roles/permissions', permissionData);

            console.log('‚úÖ Permission cr√©√©e avec succ√®s:', response);

            return response.data || response;
        } catch (error: any) {
            console.error('‚ùå Erreur lors de la cr√©ation de la permission:', error);
            throw new Error(`Erreur lors de la cr√©ation de la permission: ${error.message || 'Erreur inconnue'}`);
        }
    }

    /**
     * Supprime une permission
     */
    static async deletePermission(id: number): Promise<void> {
        try {
            console.log(`üîç Suppression de la permission ${id}...`);

            await apiClient.delete(`/roles/permissions/${id}`);

            console.log(`‚úÖ Permission ${id} supprim√©e avec succ√®s`);
        } catch (error: any) {
            console.error(`‚ùå Erreur lors de la suppression de la permission ${id}:`, error);
            throw new Error(`Erreur lors de la suppression de la permission: ${error.message || 'Erreur inconnue'}`);
        }
    }
}
