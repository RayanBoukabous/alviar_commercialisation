# Generated by Django 4.2.23 on 2025-10-25 01:44

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abattoir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200, verbose_name="Nom de l'abattoir")),
                ('wilaya', models.CharField(max_length=100, verbose_name='Wilaya')),
                ('commune', models.CharField(max_length=100, verbose_name='Commune')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('capacite_reception_ovin', models.PositiveIntegerField(default=0, help_text="Nombre maximum d'ovins pouvant être reçus par jour", verbose_name='Capacité de réception Ovin')),
                ('capacite_reception_bovin', models.PositiveIntegerField(default=0, help_text='Nombre maximum de bovins pouvant être reçus par jour', verbose_name='Capacité de réception Bovin')),
                ('capacite_stabulation_ovin', models.PositiveIntegerField(default=0, help_text="Nombre maximum d'ovins pouvant être en stabulation", verbose_name='Capacité de stabulation Ovin')),
                ('capacite_stabulation_bovin', models.PositiveIntegerField(default=0, help_text='Nombre maximum de bovins pouvant être en stabulation', verbose_name='Capacité de stabulation Bovin')),
                ('actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Abattoir',
                'verbose_name_plural': 'Abattoirs',
                'ordering': ['wilaya', 'commune', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='ChambreFroide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=50, verbose_name='Numéro de la chambre froide')),
                ('dimensions_m3', models.DecimalField(decimal_places=2, help_text='Volume en mètres cubes', max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Dimensions (m³)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Chambre froide',
                'verbose_name_plural': 'Chambres froides',
                'ordering': ['abattoir', 'numero'],
            },
        ),
        migrations.CreateModel(
            name='HistoriqueChambreFroide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.DecimalField(decimal_places=1, help_text='Température en degrés Celsius', max_digits=4, verbose_name='Température (°C)')),
                ('date_mesure', models.DateTimeField(auto_now_add=True, verbose_name='Date de mesure')),
                ('notes', models.TextField(blank=True, help_text='Notes optionnelles sur cette mesure', null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': 'Historique chambre froide',
                'verbose_name_plural': 'Historiques chambres froides',
                'ordering': ['-date_mesure'],
            },
        ),
        migrations.CreateModel(
            name='Stabulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_stabulation', models.CharField(blank=True, help_text="Numéro unique d'identification de la stabulation (généré automatiquement)", max_length=50, unique=True, verbose_name='Numéro de stabulation')),
                ('type_bete', models.CharField(choices=[('BOVIN', 'Bovin'), ('OVIN', 'Ovin'), ('CAPRIN', 'Caprin'), ('AUTRE', 'Autre')], help_text="Type d'animal en stabulation", max_length=20, verbose_name='Type de bête')),
                ('statut', models.CharField(choices=[('EN_COURS', 'En cours'), ('TERMINE', 'Terminé'), ('ANNULE', 'Annulé')], default='EN_COURS', help_text='Statut actuel de la stabulation', max_length=20, verbose_name='Statut')),
                ('date_debut', models.DateTimeField(help_text='Date et heure de début de la stabulation', verbose_name='Date de début')),
                ('date_fin', models.DateTimeField(blank=True, help_text='Date et heure de fin de la stabulation (si terminée)', null=True, verbose_name='Date de fin')),
                ('notes', models.TextField(blank=True, help_text='Notes et observations sur la stabulation', null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('date_annulation', models.DateTimeField(blank=True, help_text="Date et heure de l'annulation de la stabulation", null=True, verbose_name="Date d'annulation")),
                ('raison_annulation', models.TextField(blank=True, help_text="Raison de l'annulation de la stabulation", null=True, verbose_name="Raison d'annulation")),
                ('date_finalisation', models.DateTimeField(blank=True, help_text='Date et heure de la finalisation de la stabulation', null=True, verbose_name='Date de finalisation')),
                ('abattoir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stabulations', to='abattoir.abattoir', verbose_name='Abattoir')),
            ],
            options={
                'verbose_name': 'Stabulation',
                'verbose_name_plural': 'Stabulations',
                'ordering': ['-date_debut', 'abattoir', 'numero_stabulation'],
            },
        ),
    ]
