#!/bin/bash

# Script pour g√©n√©rer des donn√©es de b√™tes
# Usage: ./run_livestock_generation.sh [options]

echo "üöÄ Script de g√©n√©ration de donn√©es de b√™tes pour Alviar Dashboard"
echo "=================================================================="

# V√©rifier si nous sommes dans le bon r√©pertoire
if [ ! -f "manage.py" ]; then
    echo "‚ùå Erreur: Ce script doit √™tre ex√©cut√© depuis le r√©pertoire backend/"
    echo "   Utilisez: cd backend && ./run_livestock_generation.sh"
    exit 1
fi

# V√©rifier si l'environnement virtuel est activ√©
if [ -z "$VIRTUAL_ENV" ]; then
    echo "‚ö†Ô∏è  Avertissement: Aucun environnement virtuel d√©tect√©"
    echo "   Il est recommand√© d'activer un environnement virtuel Python"
fi

# Fonction d'aide
show_help() {
    echo ""
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Options:"
    echo "  -h, --help              Afficher cette aide"
    echo "  -c, --count NUMBER      Nombre de b√™tes par abattoir (d√©faut: 1200)"
    echo "  -a, --abattoir ID       ID de l'abattoir sp√©cifique (optionnel)"
    echo "  --min NUMBER            Nombre minimum par abattoir (d√©faut: 1000)"
    echo "  --max NUMBER            Nombre maximum par abattoir (d√©faut: 1500)"
    echo "  -f, --force             Forcer la g√©n√©ration m√™me si des b√™tes existent"
    echo "  --random                Utiliser un nombre al√©atoire entre min et max"
    echo ""
    echo "Exemples:"
    echo "  $0                      # G√©n√®re 1200 b√™tes par abattoir"
    echo "  $0 -c 1000             # G√©n√®re 1000 b√™tes par abattoir"
    echo "  $0 --random            # G√©n√®re entre 1000-1500 b√™tes par abattoir"
    echo "  $0 -a 1 -c 500         # G√©n√®re 500 b√™tes pour l'abattoir ID 1"
    echo "  $0 -f                  # Force la g√©n√©ration m√™me si des b√™tes existent"
    echo ""
}

# Variables par d√©faut
COUNT=""
ABATTOIR_ID=""
MIN_COUNT="1000"
MAX_COUNT="1500"
FORCE=""
RANDOM_COUNT=""

# Parser les arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        -h|--help)
            show_help
            exit 0
            ;;
        -c|--count)
            COUNT="$2"
            shift 2
            ;;
        -a|--abattoir)
            ABATTOIR_ID="$2"
            shift 2
            ;;
        --min)
            MIN_COUNT="$2"
            shift 2
            ;;
        --max)
            MAX_COUNT="$2"
            shift 2
            ;;
        -f|--force)
            FORCE="--force"
            shift
            ;;
        --random)
            RANDOM_COUNT="true"
            shift
            ;;
        *)
            echo "‚ùå Option inconnue: $1"
            show_help
            exit 1
            ;;
    esac
done

# Construire la commande Django
DJANGO_CMD="python manage.py generate_livestock"

if [ -n "$COUNT" ]; then
    DJANGO_CMD="$DJANGO_CMD --count $COUNT"
fi

if [ -n "$ABATTOIR_ID" ]; then
    DJANGO_CMD="$DJANGO_CMD --abattoir-id $ABATTOIR_ID"
fi

if [ -n "$MIN_COUNT" ]; then
    DJANGO_CMD="$DJANGO_CMD --min-count $MIN_COUNT"
fi

if [ -n "$MAX_COUNT" ]; then
    DJANGO_CMD="$DJANGO_CMD --max-count $MAX_COUNT"
fi

if [ -n "$FORCE" ]; then
    DJANGO_CMD="$DJANGO_CMD $FORCE"
fi

if [ "$RANDOM_COUNT" = "true" ]; then
    DJANGO_CMD="$DJANGO_CMD --count ''"
fi

# Afficher la configuration
echo ""
echo "üìã Configuration:"
if [ -n "$COUNT" ]; then
    echo "   - Nombre de b√™tes par abattoir: $COUNT"
elif [ "$RANDOM_COUNT" = "true" ]; then
    echo "   - Nombre de b√™tes par abattoir: Al√©atoire entre $MIN_COUNT et $MAX_COUNT"
else
    echo "   - Nombre de b√™tes par abattoir: 1200 (d√©faut)"
fi

if [ -n "$ABATTOIR_ID" ]; then
    echo "   - Abattoir sp√©cifique: ID $ABATTOIR_ID"
else
    echo "   - Tous les abattoirs actifs"
fi

if [ -n "$FORCE" ]; then
    echo "   - Mode forc√©: Oui"
else
    echo "   - Mode forc√©: Non"
fi

echo ""
echo "üîß Commande Django: $DJANGO_CMD"
echo ""

# Demander confirmation
read -p "Voulez-vous continuer? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå G√©n√©ration annul√©e"
    exit 0
fi

echo ""
echo "üöÄ D√©marrage de la g√©n√©ration..."
echo "=================================="

# Ex√©cuter la commande
eval $DJANGO_CMD

# V√©rifier le code de sortie
if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ G√©n√©ration termin√©e avec succ√®s!"
    echo ""
    echo "üí° Conseils:"
    echo "   - V√©rifiez les donn√©es dans l'interface d'administration Django"
    echo "   - Les b√™tes sont r√©parties entre les esp√®ces (Bovin, Ovin, Caprin)"
    echo "   - Les statuts sont vari√©s (Vivant, Abattu, Vendu, Mort)"
    echo "   - Les poids sont r√©alistes selon l'esp√®ce"
else
    echo ""
    echo "‚ùå Erreur lors de la g√©n√©ration"
    echo "   V√©rifiez les logs ci-dessus pour plus de d√©tails"
    exit 1
fi
