# Generated by Django 4.2.23 on 2025-10-12 14:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aliment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200, verbose_name="Nom de l'aliment")),
                ('type_aliment', models.CharField(choices=[('CONCENTRE', 'Concentré'), ('FOURRAGE', 'Fourrage'), ('COMPLEMENT', 'Complément'), ('AUTRE', 'Autre')], max_length=20, verbose_name="Type d'aliment")),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix unitaire (DA)')),
                ('unite_mesure', models.CharField(default='kg', max_length=20, verbose_name='Unité de mesure')),
                ('stock_disponible', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Stock disponible')),
                ('stock_minimum', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Stock minimum')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Aliment',
                'verbose_name_plural': 'Aliments',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Alimentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Quantité')),
                ('date_alimentation', models.DateTimeField(verbose_name="Date d'alimentation")),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
            ],
            options={
                'verbose_name': 'Alimentation',
                'verbose_name_plural': 'Alimentations',
                'ordering': ['-date_alimentation'],
            },
        ),
        migrations.CreateModel(
            name='Bete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_identification', models.CharField(max_length=50, unique=True, verbose_name="Numéro d'identification")),
                ('nom', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nom')),
                ('sexe', models.CharField(choices=[('M', 'Mâle'), ('F', 'Femelle')], max_length=1, verbose_name='Sexe')),
                ('date_naissance', models.DateField(verbose_name='Date de naissance')),
                ('poids_naissance', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Poids de naissance (kg)')),
                ('poids_actuel', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Poids actuel (kg)')),
                ('statut', models.CharField(choices=[('VIVANT', 'Vivant'), ('ABATTU', 'Abattu'), ('MORT', 'Mort'), ('VENDU', 'Vendu')], default='VIVANT', max_length=10, verbose_name='Statut')),
                ('lieu_naissance', models.CharField(blank=True, max_length=200, null=True, verbose_name='Lieu de naissance')),
                ('proprietaire_origine', models.CharField(blank=True, max_length=200, null=True, verbose_name="Propriétaire d'origine")),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Bête',
                'verbose_name_plural': 'Bêtes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Espece',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name="Nom de l'espèce")),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
            ],
            options={
                'verbose_name': 'Espèce',
                'verbose_name_plural': 'Espèces',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom de la race')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('espece', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bete.espece', verbose_name='Espèce')),
            ],
            options={
                'verbose_name': 'Race',
                'verbose_name_plural': 'Races',
                'ordering': ['espece', 'nom'],
            },
        ),
    ]
